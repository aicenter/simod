# This is master config. If you want to modify any value, use your custom config by calling the app with a path to 
# the config as a first parameter.

# change this for each experiment!
experiment_name: 'test'

# common data for all experiments
simod_data_dir: 'FILL HERE THE DATA DIR'

# experiment specific data (cache, results,...)
simod_experiment_dir: $simod_data_dir: + 'experiments/' + $experiment_name + '/'

map_dir: $simod_data_dir + 'maps/'

packages_on: false
trips_filename: 'trips'
packages_filename: 'packages'

trips_path: $simod_data_dir + $trips_filename + '.txt'
packages_path: $simod_data_dir + $packages_filename + '.txt'
trips_multiplier: 3.433
#~ trips_multiplier: 1.0



# 7:00
#start_time: 25200000
#start_time: 0

# 6:30
start_time: 23400000

use_trip_cache: true
trip_cache_file: $simod_experiment_dir + 'trip_cache'
edges_file_path: $simod_data_dir + 'edges'
edge_pairs_file_path: $simod_data_dir + 'edge_pairs'
simplify_graph: true
distance_matrix_filepath: $simod_data_dir + 'dm.csv'
station_position_filepath: $simod_data_dir + 'station_positions.csv'
vehicles_per_station: 1000

# Determines which Travel Time Provider will be used for the shortest distance computation.
# Valid options are: astar, dm (Distance Matrix), euclidean, ch, tnr, tnraf.

travel_time_provider: 'astar'
#travel_time_provider: 'dm'
#travel_time_provider: 'euclidean'
#travel_time_provider: 'ch'
#travel_time_provider: 'tnr'
#travel_time_provider: 'tnraf'

rebalancing:
{
	on: true

	# 1 minute
	period: 60

	buffer_excess: 0.05
	buffer_shortage: 0.15
	#buffer: 0.0
}

ridesharing:
{
	on: true

	method: 'insertion-heuristic'
	#method: 'vga'

	discomfort_constraint: 'absolute'
	#discomfort_constraint: 'relative'

	# 10 min
	#max_prolongation_in_seconds: 600

	# 4 min
	max_prolongation_in_seconds: 240

	maximum_relative_discomfort: 0.2

	vehicle_capacity: 5
	weight_parameter: 0.0
	batch_period: 30

	vga:
	{
		group_generator_log_filepath: $simod_experiment_dir + 'group_generation_log.csv'
		log_plan_computational_time: true

		# group size is not limited
		max_group_size: 0
		
		# 10 ms limit for group generation for one vehicle
		group_generation_time_limit: 10000

		# Maximum number of trips (vehicles) that are considered in vehicle-group assignment for each request
		solver_max_trips_per_request: 0

		# 60s limit for the VGA solver
		solver_time_limit: 60

		# note that if the time limit is not used, then Gurobi will use the default mip gap which is 0.0001
		solver_min_gap: 0.0

		export_group_data: false

		model_export_file_path: $simod_experiment_dir + 'passenger_vehicle_assignment_model.lp'

		max_optimal_group_size: 0

		max_vehicles_per_request: 0

		optimize_parked_vehicles: true
	}

	insertion_heuristic:
	{
		recompute_waiting_requests: false
	}
}

# Following values need to be set correctly if you want to use the shortestpaths library to use Transit Node Routing
# or Contraction Hierarchies travel time providers. You only need to set names for the files you are going to use.
# For example if you want to use Transit Node Routing with Arc Flags, you have to set tnraf_file_name
# and mapping_file_name but you do not need to set ch_file_name and tnr_file_name.
shortestpaths:
{
    shortestpaths_data_dir: $simod_data_dir: + 'shortestpathslib/'

    # The name of the binary file containing the Contraction Hierarchy
    ch_file_name: 'Prague.ch'
    # The name of the binary file containing the Transit Node Routing data
    tnr_file_name: 'Prague2000tnodes.tnrg'
    # The name of the binary file containing the Transit Node Routing with Arc Flags data
    tnraf_file_name: 'Prague2000tnodes.tgaf'
    # The name of the binary file containing the mapping from the IDs used in amod to the IDs used by the library.
    mapping_file_name: 'PragueMapping.xeni'

    ch_file_path: $shortestpaths.shortestpaths_data_dir + $shortestpaths.ch_file_name
    tnr_file_path: $shortestpaths.shortestpaths_data_dir + $shortestpaths.tnr_file_name
    tnraf_file_path: $shortestpaths.shortestpaths_data_dir + $shortestpaths.tnraf_file_name
    mapping_file_path: $shortestpaths.shortestpaths_data_dir + $shortestpaths.mapping_file_name
}

statistics:
{
	statistic_interval_milis: 60000
	result_file_name: 'result.json'
	result_file_path: $simod_experiment_dir + $statistics.result_file_name
	all_edges_load_interval_milis: 600000
	all_edges_load_history_file_name: 'allEdgesLoadHistory.json'
	all_edges_load_history_file_path: $simod_experiment_dir + $statistics.all_edges_load_history_file_name
	transit_statistic_file_path: $simod_experiment_dir + 'transit.csv'
	service_file_name: 'service.csv'
	service_file_path: $simod_experiment_dir + $statistics.service_file_name
	on_demand_vehicle_statistic:
	{
		dir_path: $simod_experiment_dir + 'on_demand_vehicle_statistic/'
		leave_station_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'leave_station.csv'
		pickup_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'pickup.csv'
		drop_off_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'drop_off.csv'
		reach_nearest_station_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'reach_nearest_station.csv'
		start_rebalancing_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'start_rebalancing.csv'
		finish_rebalancing_file_path: $statistics.on_demand_vehicle_statistic.dir_path + 'finish_rebalancing.csv'
	}
	trip_distances_file_path: $simod_experiment_dir + 'demand_trip_lengths.csv'
	occupancies_file_name: 'vehicle_occupancy.csv'
	occupancies_file_path: $simod_experiment_dir + $statistics.occupancies_file_name
	darp_solver_computational_times_file_path: $simod_experiment_dir + 'darp_times.csv'

	ridesharing_file_name: 'ridesharing.csv'
	ridesharing_file_path: $simod_experiment_dir + $statistics.ridesharing_file_name

	group_data_filename: 'group_data.csv'
	group_data_file_path: $simod_experiment_dir + $statistics.group_data_filename
}

!parent
agentpolis:
{
	show_stacked_entities: true

	visio:
	{
		show_visio: true
	}

	map_nodes_filepath: $map_dir + 'nodes.geojson'
	map_edges_filepath: $map_dir + 'edges.geojson'

	# 90 min
	simulation_duration:
	{
		days: 0
		hours: 1
		minutes: 30
		seconds: 0
	}
}

stations:
{
	on: true
}
