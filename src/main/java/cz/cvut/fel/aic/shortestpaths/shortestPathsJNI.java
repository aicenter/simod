/*
 * Copyright (c) 2021 Czech Technical University in Prague.
 *
 * This file is part of the SiMoD project.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package cz.cvut.fel.aic.shortestpaths;

public class shortestPathsJNI {
  public final static native void CHDistanceQueryManagerAPI_initializeCH(long jarg1, CHDistanceQueryManagerAPI jarg1_, String jarg2, String jarg3);
  public final static native long CHDistanceQueryManagerAPI_distanceQuery(long jarg1, CHDistanceQueryManagerAPI jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void CHDistanceQueryManagerAPI_clearStructures(long jarg1, CHDistanceQueryManagerAPI jarg1_);
  public final static native long new_CHDistanceQueryManagerAPI();
  public final static native void delete_CHDistanceQueryManagerAPI(long jarg1);
  public final static native void TNRDistanceQueryManagerAPI_initializeTNR(long jarg1, TNRDistanceQueryManagerAPI jarg1_, String jarg2, String jarg3);
  public final static native long TNRDistanceQueryManagerAPI_distanceQuery(long jarg1, TNRDistanceQueryManagerAPI jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void TNRDistanceQueryManagerAPI_clearStructures(long jarg1, TNRDistanceQueryManagerAPI jarg1_);
  public final static native long new_TNRDistanceQueryManagerAPI();
  public final static native void delete_TNRDistanceQueryManagerAPI(long jarg1);
  public final static native void TNRAFDistanceQueryManagerAPI_initializeTNRAF(long jarg1, TNRAFDistanceQueryManagerAPI jarg1_, String jarg2, String jarg3);
  public final static native long TNRAFDistanceQueryManagerAPI_distanceQuery(long jarg1, TNRAFDistanceQueryManagerAPI jarg1_, java.math.BigInteger jarg2, java.math.BigInteger jarg3);
  public final static native void TNRAFDistanceQueryManagerAPI_clearStructures(long jarg1, TNRAFDistanceQueryManagerAPI jarg1_);
  public final static native long new_TNRAFDistanceQueryManagerAPI();
  public final static native void delete_TNRAFDistanceQueryManagerAPI(long jarg1);
}
